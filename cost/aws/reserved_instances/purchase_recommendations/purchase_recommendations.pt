name "Reserved Instances Purchase Recommendations"
rs_pt_ver 20180301
type "policy"
short_description "A policy that sends email notifications on reserved instance purchase recommendations"
long_description "Version 1.0"
severity "medium"
category "Cost"

##################
# User inputs    #
##################

parameter "param_email" do
  category "Contact"
  label "Email addresses (separate with commas)"
  type "string"
  default "rshade@rightscale.com"
  allowed_pattern /^([a-zA-Z0-9-_.]+[@]+[a-zA-Z0-9-_.]+[.]+[a-zA-Z0-9-_]+,*|)+$/
end

parameter "param_service" do
  category "AWS"
  label "AWS Service"
  type "string"
  default "Amazon Elastic Compute Cloud - Compute"
  allowed_values "Amazon Elastic Compute Cloud - Compute", "Amazon Relational Database Service"
end

parameter "param_LookbackPeriodInDays" do
  category "AWS"
  label "LookbackPeriodInDays"
  type "string"
  default "THIRTY_DAYS"
  allowed_values "SEVEN_DAYS","THIRTY_DAYS","SIXTY_DAYS"
end

parameter "param_PaymentOption" do
  category "AWS"
  label "PaymentOption"
  type "string"
  default "NO_UPFRONT"
  allowed_values "NO_UPFRONT","PARTIAL_UPFRONT","ALL_UPFRONT"
end

parameter "param_TermInYears" do
  category "AWS"
  label "TermInYears"
  type "string"
  default "ONE_YEAR"
  allowed_values "ONE_YEAR","THREE_YEARS"
end

auth "auth_aws", type: "aws" do
  version "4"
  service "ce"
  region "us-east-1"
  access_key cred("AWS_ACCESS_KEY_ID")
  secret_key cred("AWS_SECRET_ACCESS_KEY")
end

# https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-explorer-api.html
datasource "ds_reservations_purchase_recommendations" do
  request do
     auth  $auth_aws
     host 'ce.us-east-1.amazonaws.com'
     path '/'
     verb 'POST'
     header "X-Amz-Target", "AWSInsightsIndexService.GetReservationPurchaseRecommendation"
     header "Content-Type", "application/x-amz-json-1.1"
     body_field "Service", $param_service
     # body_field "LookbackPeriodInDays", $param_LookbackPeriodInDays
     # body_field "PaymentOption", $param_PaymentOption
     # body_field "TermInYears", $param_TermInYears
  end
  result do
    collect jmes_path(response, "Recommendations[*].RecommendationDetails") do
      field "average_normalized_units_used_per_hour", jmes_path(col_item, "AverageNormalizedUnitsUsedPerHour")
      field "average_number_of_instances_used_per_hour", jmes_path(col_item, "AverageNumberOfInstancesUsedPerHour")
      field "average_utilization", jmes_path(col_item, "AverageUtilization")
      field "currency_code", jmes_path(col_item, "CurrencyCode")
      field "estimated_break_even_in_months", jmes_path(col_item, "EstimatedBreakEvenInMonths")
      field "estimated_monthly_on_demand_cost", jmes_path(col_item, "EstimatedMonthlyOnDemandCost")
      field "estimated_monthly_savings_amount", jmes_path(col_item, "EstimatedMonthlySavingsAmount")
      field "estimated_monthly_savings_percentage", jmes_path(col_item, "EstimatedMonthlySavingsPercentage")
      field "estimated_reservation_cost_for_lookback_period", jmes_path(col_item, "EstimatedReservationCostForLookbackPeriod")
      field "ec2_instance_details", jmes_path(col_item, "InstanceDetails.EC2InstanceDetails")
      field "rds_instance_details", jmes_path(col_item, "InstanceDetails.RDSInstanceDetails")
      field "maximum_normalized_units_used_per_hour", jmes_path(col_item, "MaximumNormalizedUnitsUsedPerHour")
      field "maximum_number_of_instances_used_per_hour", jmes_path(col_item, "MaximumNumberOfInstancesUsedPerHour")
      field "minimum_normalized_units_used_per_hour", jmes_path(col_item, "MinimumNormalizedUnitsUsedPerHour")
      field "minimum_number_of_instances_used_per_hour", jmes_path(col_item, "MinimumNumberOfInstancesUsedPerHour")
      field "recommended_normalized_units_to_purchase", jmes_path(col_item, "RecommendedNormalizedUnitsToPurchase")
      field "recommended_number_of_instances_to_purchase", jmes_path(col_item, "RecommendedNumberOfInstancesToPurchase")
      field "recurring_standard_monthly_cost", jmes_path(col_item, "RecurringStandardMonthlyCost")
      field "upfront_cost", jmes_path(col_item, "UpfrontCost")
    end
  end
end

escalation "alert" do
  email $param_email
end

policy "pol_ri_coverage" do
  validate_each $ds_reservations_purchase_recommendations do
    summary_template "Reserved Instances  Purchase Recommendations"
    detail_template <<-EOS
# Reserved Instance Purchase Recommendations

| AverageNormalizedUnitsUsedPerHour | AverageNumberOfInstancesUsedPerHour | AverageUtilization | CurrencyCode | EstimatedBreakEvenInMonths | EstimatedMonthlyOnDemandCost | EstimatedMonthlySavingsAmount | EstimatedMonthlySavingsPercentage | EstimatedReservationCostForLookbackPeriod | EC2InstanceDetails | RDSInstanceDetails | MaximumNormalizedUnitsUsedPerHour | MaximumNumberOfInstancesUsedPerHour | MinimumNormalizedUnitsUsedPerHour | MinimumNumberOfInstancesUsedPerHour | RecommendedNormalizedUnitsToPurchase | RecommendedNumberOfInstancesToPurchase | RecurringStandardMonthlyCost | UpfrontCost |
| --------------------------------- | ----------------------------------- | ------------------ | ------------ | -------------------------- | ---------------------------- | ----------------------------- | --------------------------------- | ----------------------------------------- | ------------------ | ------------------ | --------------------------------- |
{{ range data -}}
| {{.average_normalized_units_used_per_hour}} | {{.average_number_of_instances_used_per_hour}} | {{.average_utilization}} | {{.currency_code}} | {{.estimated_break_even_in_months}} | {{.estimated_monthly_on_demand_cost}} | {{.estimated_monthly_savings_amount}} | {{.estimated_monthly_savings_percentage}} | {{.estimated_reservation_cost_for_lookback_period}} | {{.ec2_instance_details}} | {{.rds_instance_details}} | {{.maximum_normalized_units_used_per_hour}} | {{.maximum_number_of_instances_used_per_hour}} | {{.minimum_normalized_units_used_per_hour}} | {{.minimum_number_of_instances_used_per_hour}} | {{.recommended_normalized_units_to_purchase}} | {{.recommended_number_of_instances_to_purchase}} | {{.recurring_standard_monthly_cost}} | {{.upfront_cost}} |
{{ end -}}
EOS

  escalate $alert
  check eq(1,0)
  # check eq(size(data), 0)
  end
end
